--- sync.orig.c	2021-03-11 10:18:02.000000000 +0100
+++ sync.c	2021-03-11 13:38:51.000000000 +0100
@@ -18,13 +18,14 @@
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
  */
 
+#define NONAMELESSUNION
+
 #include <stdarg.h>
 #include <string.h>
 #include <stdio.h>
 
 #include "ntstatus.h"
 #define WIN32_NO_STATUS
-#define NONAMELESSUNION
 #include "windef.h"
 #include "winbase.h"
 #include "wincon.h"
@@ -1436,7 +1437,7 @@
     return !RtlRunOnceExecuteOnce( once, (PRTL_RUN_ONCE_INIT_FN)func, param, context );
 }
 
-#ifdef __i386__
+#if defined(__i386__)
 
 /***********************************************************************
  *	     InterlockedCompareExchange   (kernelbase.@)
@@ -1485,5 +1486,52 @@
                   "lock; xaddl %eax,(%edx)\n\t"
                   "decl %eax\n\t"
                   "ret $4")
+#elif defined(__i386_on_x86_64__)
+/***********************************************************************
+ *	     InterlockedCompareExchange   (kernelbase.@)
+ */
+__ASM_STDCALL_FUNC32( __ASM_THUNK_NAME(InterlockedCompareExchange), 12,
+                  "movl 12(%esp),%eax\n\t"
+                  "movl 8(%esp),%ecx\n\t"
+                  "movl 4(%esp),%edx\n\t"
+                  "lock; cmpxchgl %ecx,(%edx)\n\t"
+                  "ret $12")
+
+/***********************************************************************
+ *	     InterlockedExchange   (kernelbase.@)
+ */
+__ASM_STDCALL_FUNC32( __ASM_THUNK_NAME(InterlockedExchange), 8,
+                  "movl 8(%esp),%eax\n\t"
+                  "movl 4(%esp),%edx\n\t"
+                  "lock; xchgl %eax,(%edx)\n\t"
+                  "ret $8")
+
+/***********************************************************************
+ *	     InterlockedExchangeAdd   (kernelbase.@)
+ */
+__ASM_STDCALL_FUNC32( __ASM_THUNK_NAME(InterlockedExchangeAdd), 8,
+                  "movl 8(%esp),%eax\n\t"
+                  "movl 4(%esp),%edx\n\t"
+                  "lock; xaddl %eax,(%edx)\n\t"
+                  "ret $8")
+
+/***********************************************************************
+ *	     InterlockedIncrement   (kernelbase.@)
+ */
+__ASM_STDCALL_FUNC32( __ASM_THUNK_NAME(InterlockedIncrement), 4,
+                  "movl 4(%esp),%edx\n\t"
+                  "movl $1,%eax\n\t"
+                  "lock; xaddl %eax,(%edx)\n\t"
+                  "incl %eax\n\t"
+                  "ret $4")
 
+/***********************************************************************
+ *	     InterlockedDecrement   (kernelbase.@)
+ */
+__ASM_STDCALL_FUNC32( __ASM_THUNK_NAME(InterlockedDecrement), 4,
+                  "movl 4(%esp),%edx\n\t"
+                  "movl $-1,%eax\n\t"
+                  "lock; xaddl %eax,(%edx)\n\t"
+                  "decl %eax\n\t"
+                  "ret $4")
 #endif  /* __i386__ */
